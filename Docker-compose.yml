version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: demoappv2-app
    ports:
      - "8088:8088"
    depends_on:
      mysql-db:
        condition: service_healthy  # Espera hasta que la DB est√© saludable
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/patientsdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_SQL_INIT_MODE: always
      SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION: "true"

      SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: 10
      SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: 30000
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mysql-db:
    image: mysql:8.0
    container_name: demoappv2-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: patientsdb
      MYSQL_TCP_PORT: 3306
      TZ: UTC
      # Optimizaciones para MySQL en Docker
      MYSQL_INNODB_BUFFER_POOL_SIZE: 256M
      MYSQL_INNODB_LOG_FILE_SIZE: 128M
    ports:
      - "3310:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/main/resources/data.sql:/docker-entrypoint-initdb.d/data.sql
      - ./mysql-config:/etc/mysql/conf.d:ro
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

volumes:
  mysql_data:
    driver: local
    driver_opts:
      type: none
      device: ./data/mysql
      o: bind

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16